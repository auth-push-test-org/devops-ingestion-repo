<?xml version="1.0" encoding="utf-8"?>
<ArrayOfContentSearcher xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <ContentSearcher>
    <Name>DeveloperTest</Name>
    <RuleId>CSCAN1000</RuleId>
    <ResourceMatchPattern>\.cs$</ResourceMatchPattern>
    <ContentSearchPatterns>
        <string>Hello\, CredScan\!</string>
    </ContentSearchPatterns>
    <MatchDetails>Found additional string I was looking for.</MatchDetails>
    <Recommendation>Using custom searchers is unsupported.</Recommendation>
    <Severity>1</Severity>
  </ContentSearcher>
  <ContentSearcher>
    <Name>KeyStore files</Name>
    <RuleId>CSCAN0010</RuleId>
    <ResourceMatchPattern>\.keystore$</ResourceMatchPattern>
    <MatchDetails>Found KeyStore certificate.</MatchDetails>
    <Recommendation>Remove certificate from repo or share, roll credential, and use approved store. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
  </ContentSearcher>
  <ContentSearcher>
    <Name>Base64 Encoded Certificate</Name>
    <RuleId>CSCAN0020</RuleId>
    <ResourceMatchPattern>\.(cs|ini|json|ps1|publishsettings|template|trd|ts|xml)$</ResourceMatchPattern>
    <ContentPrevalidatePatterns>
      <string>MII[a-zA-Z0-9/+]{200}</string>
    </ContentPrevalidatePatterns>
    <ContentSearchPatterns>
      <string>['">;=]MII[a-zA-Z0-9/+]{200}</string>
    </ContentSearchPatterns>
    <MatchDetails>Found source file with base64 encoded certificate.</MatchDetails>
    <Recommendation>Validate file contains secrets, remove, and roll. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>1</Severity>
    <SearchValidatorClassName>Microsoft.Art.ContentSearch.Base64EncodedCertValidator, Microsoft.Art.ContentSearch</SearchValidatorClassName>
  </ContentSearcher>
  <ContentSearcher>
    <Name>Publishsettings</Name>
    <RuleId>CSCAN0030</RuleId>
    <ResourceMatchPattern>\.publishsettings$</ResourceMatchPattern>
    <ContentSearchPatterns>
      <string>userpwd="[a-z0-9/\\+]{60}"</string>
    </ContentSearchPatterns>
    <MatchDetails>Found a publish settings file with potentially sensitive information.</MatchDetails>
    <Recommendation>Validate file contains secrets, remove, and roll. Remove publish settings file from code repo or share. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
  </ContentSearcher>
  <!-- <ContentSearcher>
    <Name>CodeConnStrings</Name>
    <RuleId>CSCAN0040</RuleId>
    <ResourceMatchPattern>(\.(cs|js|ts|cpp)|policy_and_key\.hpp|AccountConfig\.h)$</ResourceMatchPattern>
    <ContentSearchPatterns>
      <string>StorageCredentials\(.*?,\s?".*?"</string>
      <string>\n[ \t]{0,50}(//|/\*)[ \t]{0,10}[a-zA-Z0-9/+]{86}==</string>
      <string>\n[ \t]{0,50}(//|/\*)[ \t]{0,10}[a-zA-Z0-9/+]{43}=[^{@\d%]</string>      
      <string>\n[^\r\n]{0,400}[>|'|=|"][a-zA-Z0-9/+]{86}==</string>
      <string>\n[^\r\n]{0,400}[>|'|=|"][a-zA-Z0-9/+]{43}=[^{@\d%]</string>
      <string>\n[^\r\n]{0,800}[>|'|=|"][a-zA-Z0-9%]{43,53}%3d[^{a-zA-Z0-9%]</string>
      <string>\n.*(User ID|uid|UserId).*(Password|[^a-z]pwd)=[^$%&gt;@";\[\{][^;/"\r\n ]{7,128}(;|")</string>
    </ContentSearchPatterns>
    <ContentSearchFilters>
      <ContentFilter>
        <Name>Key Patterns ContentFilters</Name>
        <Filters>
          <string>AccountKey\s*=\s*MII[a-zA-Z0-9/+]{43,}={0,2}</string>
          <string>(prefix &lt;&lt;|guestaccesstoken|Microsoft\.ApiManagement|skiptoken|cookie|tsm|fake|example|badlyFormatted|Invalid|sha512|sha256|"input"|ENCRYPTED|"EncodedRequestUri"|looks like|myStorageAccountName|(0|x|\*){8,})</string>
        </Filters>
      </ContentFilter>
    </ContentSearchFilters>
    <MatchDetails>Found storage credential in source file.</MatchDetails>
    <Recommendation>Validate file contains secrets, remove, and roll. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
    <SearchValidatorClassName>Microsoft.Art.ContentSearch.Base64EncodedImageValidator, Microsoft.Art.ContentSearch</SearchValidatorClassName>
  </ContentSearcher> -->
  <ContentSearcher>
    <Name>PFX files</Name>
    <RuleId>CSCAN0050</RuleId>
    <ResourceMatchPattern>\.pfx$</ResourceMatchPattern>
    <MatchDetails>Found PFX certificate.</MatchDetails>
    <Recommendation>Remove certificate from repo or share, roll credential, and use approved store. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
  </ContentSearcher>
  <ContentSearcher>
    <Name>PEM Files</Name>
    <RuleId>CSCAN0060</RuleId>
    <ResourceMatchPattern>\.pem$</ResourceMatchPattern>
    <ContentSearchPatterns>
      <string>-----BEGIN\sRSA\sPRIVATE\sKEY-----</string>
    </ContentSearchPatterns>
    <MatchDetails>Found PEM certificate with private key.</MatchDetails>
    <Recommendation>Validate file contains secret, remove, roll credential, and use approved store. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
  </ContentSearcher>
  <ContentSearcher>
    <Name>PVK Files</Name>
    <RuleId>CSCAN0070</RuleId>
    <ResourceMatchPattern>\.pvk$</ResourceMatchPattern>
    <MatchDetails>Found PVK file.</MatchDetails>
    <Recommendation>Validate file contains secret, remove, roll credential, and use approved store. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
  </ContentSearcher>
  <ContentSearcher>
    <Name>Securityconfig</Name>
    <RuleId>CSCAN0080</RuleId>
    <ResourceMatchPattern>securityconfig\.xml$</ResourceMatchPattern>
    <ContentSearchPatterns>
      <string>&lt;password</string>
    </ContentSearchPatterns>
    <MatchDetails>Found Securityconfig file with certificate.</MatchDetails>
    <Recommendation>Validate file contains secret, remove, roll credential, and use approved store. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
  </ContentSearcher>
  <ContentSearcher>
    <Name>Config-Files</Name>
    <RuleId>CSCAN0090</RuleId>
    <ResourceMatchPattern>\.(config|cscfg|json|js|txt|cpp|sql|dtsx|md|java|FF|template|settings|ini|BF|ste|isml|test|ts|resx|Azure|sample|backup|rd|hpp|psm1|cshtml|htm|bat|waz|yml|Beta|py|sh|m|php|xaml|keys|cmd|rds|loadtest|properties)$</ResourceMatchPattern>
    <ContentSearchPatterns>
      <!--<machineKey decryption="..." decryptionKey="..." validation="..." validationKey="..."-->
      <string>&lt;machineKey[^&gt;]+(decryptionKey\s*\=\s*&quot;[a-fA-F0-9]{48,}|validationKey\s*\=\s*&quot;[a-fA-F0-9]{48,})[^&gt;]+&gt;</string>
      <string>(decryptionKey|validationKey)=&quot;[a-zA-Z0-9]+&quot;</string>      
      <string>(connectionstring|connString)[^=]*=["'][^"']*Password\s*=\s*[^\s;][^"']*(\x22|\x27)</string>      
      <string>&lt;add\skey=&quot;[^&quot;]+(key(s|[0-9])?|credential(s)?|secret(s|[0-9])?|password|token|KeyPrimary|KeySecondary|KeyOrSas|KeyEncrypted)&quot;\s*value\s*=&quot;[^&quot;]+&quot;[^&gt;]*/&gt;</string>
      <string>&lt;add\skey=&quot;[^&quot;]+&quot;\s*value=&quot;[^&quot;]*EncryptedSecret:[^&quot;]+&quot;\s*/&gt;</string>
      <string>value\s?=\s?&quot;((([A-Za-z0-9+/]){4}){1,200})==&quot;</string>      
      <!-- Varunsh: Adding new base64 and SQL connection string searcher patterns for config files -->
      <string>\n.*(>|'|=|")[a-zA-Z0-9/+]{86}==</string>
      <string>\n.*(>|'|=|")[a-zA-Z0-9/+]{43}=[^{@]</string>
      <string>\n.*(>|'|=|")[a-zA-Z0-9%]{43,53}%3d[^a-zA-Z0-9%]</string>
      <string>\n.*(User ID|uid|UserId).*(Password|[^a-z]pwd)=[^$%&gt;@";\[\{][^;/"]{7,128}(;|")</string>
    </ContentSearchPatterns>
    <ContentSearchFilters>
      <ContentFilter>
        <Name>Key Patterns ContentFilters</Name>
        <Filters>
          <string>AccountKey\s*=\s*MII[a-zA-Z0-9/+]{43,}={0,2}</string>
          <string>IgnoreKeys|SecretsService|SecretsTenantId|(Password|pwd|secret|credentials?)(Key|Location)|KeyManager</string>
          <string>value=&quot;(true|false|@\(api|ssh\-rsa 2048|invalid|to be|a shared secret|secreturi|clientsecret|Overr?idden by|someValue|SOME\-SIGNING\-KEY|TokenBroker|UNKNOWN|Client Secret of|Junk Credentials|Default\-|__BOOTSTRAPKEY_|CacheSecret|CatalogCert|CosmosCredentials|DeleteServiceCert|EmailCredentials|MetricsConnection|SangamCredentials|SubscriptionConnection|Enter_your_|My_Issuer|ScaleUnitXstoreSharedKey|private_powerapps|TestSecret|foo_|bar_|temp_|__WinfabricTestInfra|configured|SecretFor|Test|XSTORE_KEY|ServiceBusDiagnosticXstoreSharedKey|BoxApplicationKey|googleapps)</string>
          <string>(_AppKey&quot;|((credential|password|token)s?|(Account|access)Key=)&quot;[\s\r\n]*/|Username&quot;|\.dll|(Secret|Token|Key|Credential)s?(Encryption|From|(Signing)?Certificate|Options|Thumbprint|Contacts|String|UserId)|Key(1;value1|word|s?Path|Index|Id|Store|WillDoWithoutValidation|:NamePattern|Name&quot;|Ref&quot;)|(Secret|Credential)s?(Name|Path)&quot;|(StrongName|Chaos\s?Mon|Redis|Registry|Registery|User|Insights?|Instrumentation|Match\()Key|(Certificate|cert)(Issuer|Subject)|rollingdate|skuId|HKEY_|AddServicePrincipalCredentials|Password Resets|SecretStore|(0|x|\*){8,})</string>
        </Filters>
      </ContentFilter>
    </ContentSearchFilters>
    <MatchDetails>Found .config file matching known credential pattern.</MatchDetails>
    <Recommendation>Validate file contains secrets, remove, roll credential, and use approved store. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
    <SearchValidatorClassName>Microsoft.Art.ContentSearch.Base64EncodedImageValidator, Microsoft.Art.ContentSearch</SearchValidatorClassName>
  </ContentSearcher>
  <ContentSearcher>
    <Name>RunnerSVC-MDS</Name>
    <RuleId>CSCAN0100</RuleId>
    <ResourceMatchPattern>runnersvc\.</ResourceMatchPattern>
    <ContentSearchPatterns>
      <string>&lt;XstoreAccountInfos&gt;[ -~&quot;\s\S\n\r\t]+&lt;/XstoreAccountInfos&gt;</string>
    </ContentSearchPatterns>
    <MatchDetails>Found runnersvc file with possible storage account.</MatchDetails>
    <Recommendation>Validate file contains secrets, remove, roll credential, and use approved store. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
  </ContentSearcher>
  <ContentSearcher>
    <Name>Script -Password</Name>
    <RuleId>CSCAN0110</RuleId>
    <ResourceMatchPattern>(\.cmd|\.ps|\.ps1|\.psm1)$</ResourceMatchPattern>
    <ContentSearchPatterns>
      <string>\s-Password\s+(&quot;[^&quot;]*&quot;|&apos;[^&apos;]*&apos;)</string>
      <string>\s-Password\s+[^$\(\)\[&lt;\-]+\s*(\r\n|\-)</string>
    </ContentSearchPatterns>
    <MatchDetails>Found script with possible password.</MatchDetails>
    <Recommendation>Validate file contains secrets, remove, roll credential, and use approved store. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
  </ContentSearcher>
  <ContentSearcher>
    <Name>External APIs Specific</Name>
    <RuleId>CSCAN0120</RuleId>
    <ResourceMatchPattern>\.cs$|\.cpp$|\.c$</ResourceMatchPattern>
    <ContentSearchPatterns>
      <string>private\sconst\sstring\sAccessTokenSecret\s=\s".*";</string>
      <string>private\sconst\sstring\saccessToken\s=\s".*";</string>
      <string>private\sconst\sstring\sconsumerSecret\s=\s".*";</string>
      <string>private\sconst\sstring\sconsumerKey\s=\s".*";</string>
      <string>FacebookClient\(pageAccessToken\);</string>
      <string>pageAccessToken\s=\s".*";</string>
      <string>private\sstring\stwilioAccountSid\s=\s".*";</string>
      <string>private\sstring\stwilioAuthToken\s=\s".*";</string>
    </ContentSearchPatterns>
    <MatchDetails>Found source file with potential external API secrets.</MatchDetails>
    <Recommendation>Validate file contains secrets, remove, roll credential, and use approved store. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
  </ContentSearcher>
  <ContentSearcher>
    <Name>MonitoringAgent</Name>
    <RuleId>CSCAN0130</RuleId>
    <ResourceMatchPattern>AgentConfig\.xml$</ResourceMatchPattern>
    <ContentSearchPatterns>
      <string>Account moniker\s?=.*key\s?=.*</string>
    </ContentSearchPatterns>
    <ContentSearchFilters>
      <ContentFilter>
        <Name>Auto Key Patterns ContentFilters</Name>
        <Filters>
          <string>autoKey</string>
          <string>%s</string>
        </Filters>
      </ContentFilter>
    </ContentSearchFilters>
    <MatchDetails>Found MonitoringAgent config file matching known credential pattern.</MatchDetails>
    <Recommendation>Validate file contains secrets, remove, roll credential, and use approved store. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
  </ContentSearcher>
  <ContentSearcher>
    <Name>Default Passwords</Name>
    <RuleId>CSCAN0140</RuleId>
    <ResourceMatchPattern>\.(cs|xml|config|json|ts|cfg|txt|ps1|bat|cscfg|publishsettings|cmd|psm1|aspx|asmx|vbs|added_cluster|clean|pubxml|ccf|ini|svd|sql|c|xslt|csv|FF|ExtendedTests|settings|cshtml|template|trd|argfile)$|(config|certificate|publish|UT)\.js$|(commands|user|tests)\.cpp$</ResourceMatchPattern>
    <ContentSearchPatterns>
      <string>T!T@n1130|P0rsche911|coMmac\!12|pass@word1|rdPa\$\$w0rd|iis6\!dfu|p@ssword1|Pa\$\$word1|\!\!123ab|admin123|P@ssw0rd1|user@123|abc@123|Password@123|rdP@\$\$w0rd|homerrocks|Pa\$\$w0rd1?|\!Password1|Pa55word1|P@\$\$w0rd1|Passw0rd1|J\$p1ter|rdPassW0rd|Y29NbWFjITEy|Pass4Sales|rdPa\$\$word|\!P@ssW0rd1|WS2012R2R0cks\!|DSFS0319Test|March2010M2\!|Password~1|UL0brlXlp_r8vG6iiRvCcsFDfu6bJ6KK|7\-Tdh3Klrec4dJbOyONDOkCQ84BWN1JN|\$mCertPwd</string>
    </ContentSearchPatterns>
    <MatchDetails>Found file matching known default credentials.</MatchDetails>
    <Recommendation>Validate file contains secrets, remove, roll credential, and use approved store. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
  </ContentSearcher>
  <!-- Varunsh: Adding new base64 and SQL connection string searcher. For .cs and config files, these patterns have been added to existing searcher so that same file is not scanned again. -->
  <ContentSearcher>
    <Name>AzureSecrets</Name>
    <RuleId>CSCAN0150</RuleId>
    <ResourceMatchPattern>\.xml$|\.pubxml$|\.definitions$|\.ps1$|\.wadcfgx$|\.cmd$</ResourceMatchPattern>
    <ContentSearchPatterns>
      <string>userpwd="[a-z0-9]{60}"</string>
      <string>\n.*(>|'|=|")[a-zA-Z0-9/+]{43}=[^{@]</string>
      <string>\n.*(>|'|=|"|#)[a-zA-Z0-9/+]{86}==</string>
      <string>\n.*(>|'|=|")[a-zA-Z0-9%]{43,53}%3d[^a-zA-Z0-9%]</string>
      <string>\n.*(User ID|uid|UserId).*(Password|[^a-z]pwd)=[^$%&gt;@";\[\{][^;/"]{7,128}(;|")</string>
    </ContentSearchPatterns>
    <ContentSearchFilters>
      <ContentFilter>
        <Name>Key Patterns ContentFilters</Name>
        <Filters>
          <string>AccountKey\s*=\s*MII[a-zA-Z0-9/+]{43,}={0,2}</string>
        </Filters>
      </ContentFilter>
    </ContentSearchFilters>
    <MatchDetails>Found secret key, SAS or SQL connection string with password</MatchDetails>
    <Recommendation>Validate file contains secrets, remove, roll credential, use an approved secret store.</Recommendation>
    <Severity>3</Severity>
    <SearchValidatorClassName>Microsoft.Art.ContentSearch.Base64EncodedImageValidator, Microsoft.Art.ContentSearch</SearchValidatorClassName>
  </ContentSearcher>
  <ContentSearcher>
    <Name>Domain Passwords</Name>
    <RuleId>CSCAN0160</RuleId>
    <ResourceMatchPattern>\.cs$|\.c$|\.cpp$|\.ps1$|\.ps$|\.cmd$|\.bat$|\.log$|\.psd$</ResourceMatchPattern>
    <ContentSearchPatterns>
      <string>NetworkCredential\(.*,.*,(corp|europe|middleeast|northamerica|southpacific|southamerica|fareast|africa|redmond|exchange|extranet|partners|extranettest|parttest|noe|ntdev|ntwksta|sys\-wingroup|windeploy|wingroup|winse|segroup|xcorp|xrep|phx|gme|usme|cdocidm|mslpa)\\.*</string>
      <string>net\suse.*\/u\:(corp|europe|middleeast|northamerica|southpacific|southamerica|fareast|africa|redmond|exchange|extranet|partners|extranettest|parttest|noe|ntdev|ntwksta|sys\-wingroup|windeploy|wingroup|winse|segroup|xcorp|xrep|phx|gme|usme|cdocidm|mslpa)\\.*</string>
      <string>schtasks.*/ru\s(corp|europe|middleeast|northamerica|southpacific|southamerica|fareast|africa|redmond|exchange|extranet|partners|extranettest|parttest|noe|ntdev|ntwksta|sys\-wingroup|windeploy|wingroup|winse|segroup|xcorp|xrep|phx|gme|usme|cdocidm|mslpa).*/rp.*</string>
    </ContentSearchPatterns>
    <MatchDetails>Found file matching possible domain credentials.</MatchDetails>
    <Recommendation>Validate file contains secrets, remove, roll credential, and use approved store. For additional information on secret remediation see https://aka.ms/credscan </Recommendation>
    <Severity>3</Severity>
  </ContentSearcher>
</ArrayOfContentSearcher>